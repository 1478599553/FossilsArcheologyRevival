package com.github.revival.client.model.prehistoric;

import net.ilexiconn.llibrary.client.model.ModelAnimator;
import net.ilexiconn.llibrary.client.model.tools.AdvancedModelRenderer;
import net.ilexiconn.llibrary.server.animation.IAnimatedEntity;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

import com.github.revival.client.model.prehistoric.test.ModelNewPrehistoric;
import com.github.revival.server.entity.mob.EntitySpinosaurus;
import com.github.revival.server.entity.mob.test.EntityNewPrehistoric;

public class ModelSpinosaurus extends ModelNewPrehistoric {
	public AdvancedModelRenderer lowerBody;
	public AdvancedModelRenderer leftThigh;
	public AdvancedModelRenderer rightThigh;
	public AdvancedModelRenderer tail1;
	public AdvancedModelRenderer upperBody;
	public AdvancedModelRenderer Sail4;
	public AdvancedModelRenderer Sail6;
	public AdvancedModelRenderer Sail5;
	public AdvancedModelRenderer Sail7;
	public AdvancedModelRenderer tail2;
	public AdvancedModelRenderer Sail8;
	public AdvancedModelRenderer Sail9;
	public AdvancedModelRenderer Sail9_1;
	public AdvancedModelRenderer Sail4_1;
	public AdvancedModelRenderer tail3;
	public AdvancedModelRenderer neck;
	public AdvancedModelRenderer leftUpperArm;
	public AdvancedModelRenderer rightUpperArm;
	public AdvancedModelRenderer Sail2;
	public AdvancedModelRenderer Sail3;
	public AdvancedModelRenderer head;
	public AdvancedModelRenderer upperJaw;
	public AdvancedModelRenderer lowerJaw;
	public AdvancedModelRenderer crest;
	public AdvancedModelRenderer teeth;
	public AdvancedModelRenderer leftLowerArm;
	public AdvancedModelRenderer rightLowerArm;
	public AdvancedModelRenderer leftLeg;
	public AdvancedModelRenderer leftFoot;
	public AdvancedModelRenderer rightLeg;
	public AdvancedModelRenderer rightFoot;
	private ModelAnimator animator;

	public ModelSpinosaurus() {
		this.textureWidth = 64;
		this.textureHeight = 64;
		this.tail2 = new AdvancedModelRenderer(this, 38, 13);
		this.tail2.setRotationPoint(0.0F, 1.0F, 7.9F);
		this.tail2.addBox(-1.5F, 0.0F, 0.0F, 3, 3, 10, 0.0F);
		this.setRotateAngle(tail2, 0.030368728984701335F, -0.0F, 0.0F);
		this.Sail4_1 = new AdvancedModelRenderer(this, 30, 42);
		this.Sail4_1.setRotationPoint(0.0F, 1.4F, 0.1F);
		this.Sail4_1.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail4_1, 0.017453292519943295F, 0.0F, 0.0F);
		this.leftThigh = new AdvancedModelRenderer(this, 22, 11);
		this.leftThigh.mirror = true;
		this.leftThigh.setRotationPoint(3.0F, 13.2F, 4.9F);
		this.leftThigh.addBox(0.0F, -1.0F, -2.0F, 3, 6, 4, 0.0F);
		this.crest = new AdvancedModelRenderer(this, 0, 10);
		this.crest.setRotationPoint(0.0F, -1.3F, -1.0F);
		this.crest.addBox(-0.5F, -1.0F, -1.0F, 1, 1, 2, 0.0F);
		this.teeth = new AdvancedModelRenderer(this, 15, 0);
		this.teeth.setRotationPoint(0.0F, 1.5F, -3.0F);
		this.teeth.addBox(-2.0F, 0.0F, -4.0F, 4, 1, 4, 0.0F);
		this.leftFoot = new AdvancedModelRenderer(this, 18, 23);
		this.leftFoot.setRotationPoint(0.0F, 4.8F, 0.5F);
		this.leftFoot.addBox(-1.5F, 0.0F, -5.0F, 3, 2, 5, 0.0F);
		this.setRotateAngle(leftFoot, 0.2617993877991494F, -0.0F, 0.0F);
		this.Sail8 = new AdvancedModelRenderer(this, 40, 52);
		this.Sail8.setRotationPoint(0.0F, 0.46F, -1.91F);
		this.Sail8.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail8, 0.017453292519943295F, -0.0F, 0.0F);
		this.leftUpperArm = new AdvancedModelRenderer(this, 40, 26);
		this.leftUpperArm.mirror = true;
		this.leftUpperArm.setRotationPoint(2.5F, 0.0F, -4.5F);
		this.leftUpperArm.addBox(0.0F, 0.0F, -1.5F, 2, 4, 3, 0.0F);
		this.setRotateAngle(leftUpperArm, 0.22689280275926282F, -0.0F, 0.0F);
		this.Sail2 = new AdvancedModelRenderer(this, 0, 40);
		this.Sail2.setRotationPoint(0.0F, 1.97F, -4.13F);
		this.Sail2.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail2, -0.03490658503988659F, -0.0F, 0.0F);
		this.neck = new AdvancedModelRenderer(this, 22, 30);
		this.neck.setRotationPoint(0.0F, -0.5F, -4.6F);
		this.neck.addBox(-2.0F, -1.5F, -7.0F, 4, 4, 7, 0.0F);
		this.setRotateAngle(neck, -0.5213298475707062F, -0.0F, 0.0F);
		this.Sail9 = new AdvancedModelRenderer(this, 52, 52);
		this.Sail9.setRotationPoint(0.0F, 2.5F, 2.1F);
		this.Sail9.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail9, 0.017453292519943295F, 0.0F, 0.0F);
		this.head = new AdvancedModelRenderer(this, 0, 0);
		this.head.setRotationPoint(0.0F, 0.2F, -6.1F);
		this.head.addBox(-2.5F, -2.0F, -5.0F, 5, 5, 5, 0.0F);
		this.setRotateAngle(head, 0.593411945678072F, -0.0F, 0.0F);
		this.Sail7 = new AdvancedModelRenderer(this, 24, 42);
		this.Sail7.setRotationPoint(0.0F, 0.86F, 6.0F);
		this.Sail7.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail7, 0.03490658503988659F, -0.0F, 0.0F);
		this.lowerBody = new AdvancedModelRenderer(this, 0, 46);
		this.lowerBody.setRotationPoint(0.0F, 9.7F, -3.0F);
		this.lowerBody.addBox(-3.5F, 0.0F, 0.0F, 7, 7, 10, 0.0F);
		this.setRotateAngle(lowerBody, -0.03490658503988659F, -0.0F, 0.0F);
		this.Sail6 = new AdvancedModelRenderer(this, 46, 33);
		this.Sail6.setRotationPoint(0.0F, 0.93F, 4.0F);
		this.Sail6.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail6, 0.03490658503988659F, -0.0F, 0.0F);
		this.rightThigh = new AdvancedModelRenderer(this, 22, 11);
		this.rightThigh.setRotationPoint(-3.0F, 13.2F, 4.9F);
		this.rightThigh.addBox(-3.0F, -1.0F, -2.0F, 3, 6, 4, 0.0F);
		this.lowerJaw = new AdvancedModelRenderer(this, 0, 20);
		this.lowerJaw.setRotationPoint(0.0F, 1.9F, -5.0F);
		this.lowerJaw.addBox(-1.5F, 0.0F, -6.0F, 3, 1, 6, 0.0F);
		this.rightLowerArm = new AdvancedModelRenderer(this, 38, 13);
		this.rightLowerArm.mirror = true;
		this.rightLowerArm.setRotationPoint(-0.99F, 2.9F, 0.1F);
		this.rightLowerArm.addBox(-1.0F, 0.0F, 0.0F, 2, 4, 2, 0.0F);
		this.setRotateAngle(rightLowerArm, -0.6457718232379019F, -0.0F, 0.0F);
		this.tail1 = new AdvancedModelRenderer(this, 40, 0);
		this.tail1.setRotationPoint(0.0F, 0.3F, 9.9F);
		this.tail1.addBox(-2.0F, 0.0F, 0.0F, 4, 5, 8, 0.0F);
		this.setRotateAngle(tail1, 0.017453292519943295F, -0.0F, 0.0F);
		this.tail3 = new AdvancedModelRenderer(this, 50, 26);
		this.tail3.setRotationPoint(0.0F, 0.5F, 10.0F);
		this.tail3.addBox(-1.0F, 0.0F, 0.0F, 2, 2, 5, 0.0F);
		this.setRotateAngle(tail3, -0.10698868314725239F, -0.0F, 0.0F);
		this.Sail9_1 = new AdvancedModelRenderer(this, 58, 52);
		this.Sail9_1.setRotationPoint(0.0F, 4.6F, 4.1F);
		this.Sail9_1.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail9_1, 0.017453292519943295F, 0.0F, 0.0F);
		this.Sail3 = new AdvancedModelRenderer(this, 34, 52);
		this.Sail3.setRotationPoint(0.0F, 0.0F, -2.06F);
		this.Sail3.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail3, -0.03490658503988659F, -0.0F, 0.0F);
		this.leftLeg = new AdvancedModelRenderer(this, 30, 2);
		this.leftLeg.setRotationPoint(1.5F, 4.0F, 2.0F);
		this.leftLeg.addBox(-1.0F, 0.0F, -2.0F, 2, 6, 3, 0.0F);
		this.setRotateAngle(leftLeg, -0.2617993877991494F, -0.0F, 0.0F);
		this.leftLowerArm = new AdvancedModelRenderer(this, 38, 13);
		this.leftLowerArm.setRotationPoint(0.99F, 2.9F, 0.1F);
		this.leftLowerArm.addBox(-1.0F, 0.0F, 0.0F, 2, 4, 2, 0.0F);
		this.setRotateAngle(leftLowerArm, -0.6457718232379019F, -0.0F, 0.0F);
		this.rightLeg = new AdvancedModelRenderer(this, 30, 2);
		this.rightLeg.setRotationPoint(-1.5F, 4.0F, 2.0F);
		this.rightLeg.addBox(-1.0F, 0.0F, -2.0F, 2, 6, 3, 0.0F);
		this.setRotateAngle(rightLeg, -0.2617993877991494F, -0.0F, 0.0F);
		this.Sail4 = new AdvancedModelRenderer(this, 30, 42);
		this.Sail4.setRotationPoint(0.0F, 2.0F, 0.07F);
		this.Sail4.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail4, 0.03490658503988659F, -0.0F, 0.0F);
		this.Sail5 = new AdvancedModelRenderer(this, 52, 33);
		this.Sail5.setRotationPoint(0.0F, 1.0F, 2.0F);
		this.Sail5.addBox(-0.5F, -10.0F, -1.0F, 1, 10, 2, 0.0F);
		this.setRotateAngle(Sail5, 0.03490658503988659F, -0.0F, 0.0F);
		this.upperJaw = new AdvancedModelRenderer(this, 0, 10);
		this.upperJaw.setRotationPoint(0.0F, 0.5F, -4.8F);
		this.upperJaw.addBox(-2.0F, -1.5F, -7.0F, 4, 3, 7, 0.0F);
		this.upperBody = new AdvancedModelRenderer(this, 0, 27);
		this.upperBody.setRotationPoint(0.0F, 3.0F, 0.2F);
		this.upperBody.addBox(-2.5F, -2.5F, -6.0F, 5, 6, 6, 0.0F);
		this.setRotateAngle(upperBody, 0.07347836150896127F, -0.0F, 0.0F);
		this.rightUpperArm = new AdvancedModelRenderer(this, 40, 26);
		this.rightUpperArm.setRotationPoint(-2.5F, 0.0F, -4.5F);
		this.rightUpperArm.addBox(-2.0F, 0.0F, -1.5F, 2, 4, 3, 0.0F);
		this.setRotateAngle(rightUpperArm, 0.22689280275926282F, -0.0F, 0.0F);
		this.rightFoot = new AdvancedModelRenderer(this, 18, 23);
		this.rightFoot.setRotationPoint(0.0F, 4.8F, 0.5F);
		this.rightFoot.addBox(-1.5F, 0.0F, -5.0F, 3, 2, 5, 0.0F);
		this.setRotateAngle(rightFoot, 0.2617993877991494F, -0.0F, 0.0F);
		this.tail1.addChild(this.tail2);
		this.tail1.addChild(this.Sail4_1);
		this.upperJaw.addChild(this.crest);
		this.upperJaw.addChild(this.teeth);
		this.leftLeg.addChild(this.leftFoot);
		this.tail1.addChild(this.Sail8);
		this.upperBody.addChild(this.leftUpperArm);
		this.upperBody.addChild(this.Sail2);
		this.upperBody.addChild(this.neck);
		this.tail1.addChild(this.Sail9);
		this.neck.addChild(this.head);
		this.lowerBody.addChild(this.Sail7);
		this.lowerBody.addChild(this.Sail6);
		this.head.addChild(this.lowerJaw);
		this.rightUpperArm.addChild(this.rightLowerArm);
		this.lowerBody.addChild(this.tail1);
		this.tail2.addChild(this.tail3);
		this.tail1.addChild(this.Sail9_1);
		this.upperBody.addChild(this.Sail3);
		this.leftThigh.addChild(this.leftLeg);
		this.leftUpperArm.addChild(this.leftLowerArm);
		this.rightThigh.addChild(this.rightLeg);
		this.lowerBody.addChild(this.Sail4);
		this.lowerBody.addChild(this.Sail5);
		this.head.addChild(this.upperJaw);
		this.lowerBody.addChild(this.upperBody);
		this.upperBody.addChild(this.rightUpperArm);
		this.rightLeg.addChild(this.rightFoot);
		this.updateDefaultPose();
		animator = ModelAnimator.create();
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animate((IAnimatedEntity) entity, f, f1, f2, f3, f4, f5);
		this.leftThigh.render(f5);
		this.lowerBody.render(f5);
		this.rightThigh.render(f5);
	}

	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		animator.update(entity);
		blockMovement(f, f1, f2, f3, f4, f5, (Entity) entity);
		this.resetToDefaultPose();
		setRotationAngles(f, f1, f2, f3, f4, f5, (Entity) entity);
		animator.setAnimation(EntitySpinosaurus.ATTACK_ANIMATION);
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -36, 0, 0);
		ModelUtils.rotate(animator, head, 46, 0, 0);
		ModelUtils.rotate(animator, lowerJaw, 31, 0, 0);
		animator.endKeyframe();
		animator.startKeyframe(10);
		ModelUtils.rotate(animator, neck, -18, 0, 0);
		ModelUtils.rotate(animator, head, 26, 0, 0);
		animator.endKeyframe();
		animator.resetKeyframe(5);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		AdvancedModelRenderer[] tailParts = { this.lowerBody, this.tail1, this.tail2 };
		AdvancedModelRenderer[] neckParts = { this.neck, this.head };
		AdvancedModelRenderer[] leftArmParts = { this.leftUpperArm, this.leftLowerArm };
		AdvancedModelRenderer[] rightArmParts = { this.rightUpperArm, this.rightLowerArm };
		float speed = 0.1F;
		float speed2 = 0.3F;
		this.walk(upperBody, speed, 0.1F, false, 1F, 0F, entity.ticksExisted, 1);
		this.bob(lowerBody, speed, 0.7F, false, entity.ticksExisted, 1);
		this.walk(leftThigh, speed2, 0.8F, false, 0F, 0.4F, f, f1);
		this.walk(leftLeg, speed2, 0.2F, false, 0F, -0.6F, f, f1);
		this.walk(leftFoot, speed2, -0.8F, true, 2.5F, -0.4F, f, f1);
		this.walk(rightThigh, speed2, 0.8F, true, 0F, -0.4F, f, f1);
		this.walk(rightLeg, speed2, 0.2F, true, 0F, 0.6F, f, f1);
		this.walk(rightFoot, speed2, -0.8F, false, 2.5F, 0.4F, f, f1);
		this.chainWave(tailParts, speed, 0.05F, -3, entity.ticksExisted, 1);
		this.chainWave(leftArmParts, speed, 0.15F, -3, entity.ticksExisted, 1);
		this.chainWave(rightArmParts, speed, 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed, 0.15F, -3, entity.ticksExisted, 1);
		this.chainSwing(tailParts, speed2, 0.25F, -3, f, f1);
		this.chainSwing(neckParts, speed2, 0.5F, 3, f, f1);
		this.chainWave(neckParts, speed, 0.15F, 3, entity.ticksExisted, 1);
		((EntityNewPrehistoric) entity).chainBuffer.applyChainSwingBuffer((ModelRenderer[]) tailParts);
		if (entity.riddenByEntity == null) {
			ModelUtils.faceTargetMod(neck, f3, f4, 0.5F);
			ModelUtils.faceTargetMod(head, f3, f4, 0.5F);
		}
		{
			float sitProgress = ((EntitySpinosaurus)entity).sitProgress;
		}
	}
}
